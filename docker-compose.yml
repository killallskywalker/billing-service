services:
  migration:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    command: sh -c "npm run migration:run && npm run db:seed"
    env_file:
      - .env
    depends_on:
      postgres-service:
        condition: service_healthy
    restart: "no"
  policy-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: policy-service:prod
    container_name: policy-service
    env_file:
      - .env
    environment:
      NODE_ENV: production
    depends_on:
      migration:
        condition: service_completed_successfully
    command: ["node", "dist/main.js"]
    ports:
      - "3000:3000"

  postgres-service:
    image: postgres:15
    container_name: postgres-service
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME:-developer}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-password}
      POSTGRES_DB: ${DATABASE_NAME:-customer_billing_portal}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME:-developer} -d ${DATABASE_NAME:-customer_billing_portal}"]
      interval: 5s
      timeout: 5s
      retries: 5      
    ports:
      - "5555:5432"
volumes:
  db_data: