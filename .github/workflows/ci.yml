name: Policies Service CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint

  test-coverage:
    name: Unit Tests with Coverage
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests with Coverage
        run: npm run test:cov

  build-and-e2e-scan-vulnerability:
    name: Build and E2E Tests
    needs: test-coverage
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-image-tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Set image tag output
        id: set-image-tag
        run: echo "tag=policies-service:development" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Build Docker Image (Development)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: policies-service:development
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: development

      - name: Update docker-compose.dev.yml with built image
        run: |
          sed -i 's|image: policies-service|image: policies-service:development|' docker-compose.dev.yml

      - name: Start Docker Compose Services
        run: docker compose -f docker-compose.dev.yml up -d

      - name: Wait for services
        run: sleep 15

      - name: Run E2E Tests
        run: docker compose -f docker-compose.dev.yml run --rm policy-service npm run test:e2e

      - name: Run Trivy Image Scan
        uses: aquasecurity/trivy-action@0.13.1
        with:
          scan-type: image
          image-ref: policies-service:development
          format: table
          severity: CRITICAL,HIGH

      - name: Clean up
        if: always()
        run: docker compose -f docker-compose.dev.yml down -v
